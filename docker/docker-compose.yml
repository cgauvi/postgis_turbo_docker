# Author: Charles Gauvin
# Date: April 6 2023
#
# Docker compose for postgis db + auxiliary services setup
#
# To build/run, `docker compose -f docker-compose.yml --env-file ./config/.env up` from within . (docker directory)
# 
# To build a single service -e.g. the DB:  
# `docker compose -f docker-compose.yml --env-file ./config/.env build db`
#
# Sample ./config/.env:
#
# POSTGRES_CONNECTION_STRING=postgresql://zz:uu@host:5432/xx
# POSTGRES_USER=zz
# POSTGRES_DB=xx
# POSTGRES_PASSWORD=uu
#

version: "3.9"
services:
 
  # Set up a custom postgis DB with additional extensions for address normalization and searching
  db:
    env_file: ./config/.env
    #image: kartoza/postgis:15-3
    build:
      context: .
      dockerfile: Dockerfile.postgis.psql_address_dict.kartoza
    volumes:
      - pgdata:/var/lib/postgresql/data:z
    container_name: db_postgis
    networks:
      - pgNet3
    environment:
      - POSTGRES_USER_RO=$POSTGRES_USER_RO
      - POSTGRES_PASSWORD_RO=$POSTGRES_PASSWORD_RO
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DBNAME=$POSTGRES_DBNAME
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SCHEMA_PUBLIC_FACING=$POSTGRES_SCHEMA_PUBLIC_FACING
    ports:
      - 5052:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$POSTGRES_DBNAME"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  
    shm_size: 10g

  
  tileserv_private:
    image: pramsey/pg_tileserv
    command: "--config /app/config.toml"
    ports:
      - 5057:7810
    volumes:
      - ./config/tileserv_config_private.toml:/app/config.toml:ro
    networks:
      - pgNet3
    environment:
      - DATABASE_URL=$POSTGRES_CONNECTION_STRING
    depends_on:
        db:
          condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "netstat -an | grep 7810 > /dev/null; if [ 0 != $? ]; then exit 1; fi;"]

  tileserv:
    image: pramsey/pg_tileserv
    command: "--config /app/config.toml"
    ports:
      - 5055:7800
    volumes:
      - ./config/tileserv_config.toml:/app/config.toml:ro
    networks:
      - pgNet3
    environment:
      - DATABASE_URL=$POSTGRES_CONNECTION_STRING_RO
    depends_on:
        db:
          condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "netstat -an | grep 7800 > /dev/null; if [ 0 != $? ]; then exit 1; fi;"]

  
  featureserv:
    image: pramsey/pg_featureserv
    command: "--config /app/config.toml"
    ports:
      - 5054:9000
    volumes:
      - ./config/featureserv_config.toml:/app/config.toml:ro
    networks:
      - pgNet3
    environment:
      - DATABASE_URL=$POSTGRES_CONNECTION_STRING_RO
    depends_on:
        db:
          condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000"]

  web:
    image: nginx
    ports:
      - 8000:80
    volumes:
      - ../html/tiles_render.html:/usr/share/nginx/html/tiles_render.html
      - ../html/address-lookup.html:/usr/share/nginx/html/address-lookup.html
      - ../html/buildings_tax_pgtileserv.html:/usr/share/nginx/html/buildings_tax_pgtileserv.html
    depends_on:
        db:
          condition: service_healthy
    networks:
      - pgNet3

  varnish_cache :
    image: eeacms/varnish
    ports:
      - '80:6081'
    environment:
      BACKENDS: 'tileserv:7800'
      DNS_ENABLED: 'false'
      COOKIES: 'true'
      PARAM_VALUE: '-p default_ttl=600'
    networks:
      - pgNet3
    depends_on:
      - tileserv



  # https://github.com/consbio/mbtileserver#tilejson-api
  # Can serve mbtiles + access with endpoint like "http://localhost:789/services/osm-2020-02-10-v3.11_canada_quebec/tiles/{z}/{x}/{y}.pbf"
  # Osm tiles for quebec can be downloaded from https://www.maptiler.com/ and placed them in ./tiles/osm-2020-02-10-v3.11_canada_quebec.mbtiles
  # Or tiles can be produced with openmaptiles - follow the quick start: https://github.com/openmaptiles/openmaptiles/blob/master/QUICKSTART.md
  mbtileserver:
    image: consbio/mbtileserver:latest
    container_name: mbtileserver
    entrypoint: /mbtileserver --enable-reload-signal --dir /opt/tippecanoe/tiles
    restart: always
    ports:
        - 5056:8000
    networks:
      - pgNet3
    volumes:
      - ../tiles:/opt/tippecanoe/tiles


networks:
  pgNet3:
    name: pgNet3


volumes:
  pgdata: